// Algorithm
// Step 1:Initialise an integer revNum to 0. This variable will store the reversed number.

// Step 2: Using a while loop we iterate while n is greater than 0 and at each iteration:

// Calculate the last digit of the number using the modulus operator (N%10) and store it in a variable last digit.
// Update the reversed number by multiplying it with 10 and adding the last digit. This effectively appends the last digit to the end of the reversed number.
// Remove the last digit of the number by dividing it by 10.
// Step 3: After exiting the while loop, return the reversed number.




                            
#include <iostream>
using namespace std;

int main() {
	// Declare a variable 'n' to
	// store the input integer.
	int n;
	// Prompt the user to enter an
	// integer and store it in 'n'.
	cin >> n;
	// Initialize a variable 'revNum' to
	// store the reverse of the input integer.
	int revNum = 0;
	// Start a while loop to reverse the
	// digits of the input integer.
	while(n > 0){
		// Extract the last digit of
		// 'n' and store it in 'ld'.
		int ld = n % 10;
		// Multiply the current reverse number
		// by 10 and add the last digit.
		revNum = (revNum * 10) + ld;
		// Remove the last digit from 'n'.
		n = n / 10;
	}
	// Print the reversed number.
	cout << revNum;
}
                            
                        